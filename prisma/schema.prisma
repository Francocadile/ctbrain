// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ========= Enums base =========
enum Role {
  ADMIN
  CT
  MEDICO
  JUGADOR
  DIRECTIVO
}

enum SessionType {
  GENERAL
  FUERZA
  TACTICA
  AEROBICO
  RECUPERACION
}

// ========= Enums clínicos =========
enum ClinicalStatus {
  BAJA
  REINTEGRO
  LIMITADA
  ALTA
}

enum LeaveStage {
  PARTIDO
  ENTRENAMIENTO
  EXTRADEPORTIVO
}

enum LeaveKind {
  LESION
  ENFERMEDAD
}

enum Laterality {
  IZQ
  DER
  BILATERAL
  NA
}

enum Severity {
  LEVE
  MODERADA
  SEVERA
}

enum Mechanism {
  SOBRECARGA
  IMPACTO
  TORSION
  ESTIRAMIENTO
  RECIDIVA
  OTRO
}

enum SystemAffected {
  RESPIRATORIO
  GASTROINTESTINAL
  OTORRINO
  DERMATOLOGICO
  GENERAL
  OTRO
}

enum IllAptitude {
  SOLO_GIMNASIO
  AEROBICO_SUAVE
  CHARLAS_TACTICO
  NINGUNO
}

// ========= Modelos principales =========
model User {
  id         String   @id @default(cuid())
  email      String   @unique
  name       String?
  password   String?
  role       Role     @default(JUGADOR)
  isApproved Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  sessions        Session[]      @relation("UserSessions")
  rpeEntries      RPEEntry[]
  wellnessEntries WellnessEntry[]
  plannerPrefs    PlannerPrefs?
  exercises       Exercise[]
  clinicalEntries ClinicalEntry[]
}

model Session {
  id          String      @id @default(cuid())
  title       String
  description String?
  date        DateTime
  type        SessionType @default(GENERAL)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  createdBy   String
  user        User        @relation("UserSessions", fields: [createdBy], references: [id], onDelete: Cascade)

  @@index([date])
  @@index([type])
  @@index([createdBy])
}

// ========= RPE / Wellness =========
model RPEEntry {
  id           String   @id @default(cuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  date         DateTime
  session      Int      @default(1)
  sessionLabel String?
  sessionUid   String?
  rpe          Int
  duration     Int?
  load         Int?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([userId, date, session], name: "userId_date_session")
  @@index([date])
  @@index([userId, date, session])
  @@index([date, session])
  @@index([sessionUid])
}

model WellnessEntry {
  id              String   @id @default(cuid())
  userId          String
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  date            DateTime
  sleepQuality    Int
  sleepHours      Float?
  fatigue         Int
  muscleSoreness  Int
  stress          Int
  mood            Int
  comment         String?
  total           Int?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@unique([userId, date], name: "userId_date")
  @@index([date])
  @@index([userId, date])
}

// ========= Planner, Ejercicios, Clínico, Scouting =========
// (sin cambios estructurales; se mantienen igual que en tu versión actual)
...
