// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  CT
  MEDICO
  JUGADOR
  DIRECTIVO
}

enum SessionType {
  GENERAL
  FUERZA
  TACTICA
  AEROBICO
  RECUPERACION
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String?
  password  String?   // necesario para /admin/users (bcrypt)
  role      Role      @default(JUGADOR)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  sessions  Session[] @relation("UserSessions")

  // Métricas
  wellness  WellnessEntry[]
  rpes      RPEEntry[]
}

model Session {
  id          String       @id @default(cuid())
  title       String
  description String?
  date        DateTime
  type        SessionType  @default(GENERAL)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  createdBy   String
  user        User         @relation("UserSessions", fields: [createdBy], references: [id], onDelete: Cascade)

  rpes        RPEEntry[]

  @@index([date])
  @@index([type])
  @@index([createdBy])
}

// ===== Wellness (jugador reporta, CT observa) =====
model WellnessEntry {
  id           String   @id @default(cuid())
  userId       String
  date         DateTime // 00:00:00 UTC del día

  sleepQuality Int      // 1–5 (muy malo → excelente)
  sleepHours   Float    // p.ej. 7.5
  fatigue      Int      // 1–5 (extremadamente cansado → muy enérgico)
  soreness     Int      // 1–5 (dolor intenso → sin dolor)
  stress       Int      // 1–5 (muy alto → muy bajo)
  mood         Int      // 1–5 (muy malhumorado → excelente)
  notes        String?

  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([userId, date])
  @@index([date, userId])
}

// ===== RPE (jugador reporta, CT pone duración) =====
model RPEEntry {
  id         String   @id @default(cuid())
  userId     String
  date       DateTime        // 00:00:00 UTC del día o de la sesión
  sessionId  String?         // opcional
  rpe        Int             // 0–10
  duration   Int?            // minutos (si el CT la fija por fecha, acá se completa)
  load       Int?            // rpe * duración (AU)

  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  session    Session? @relation(fields: [sessionId], references: [id], onDelete: SetNull)

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([date, userId])
  @@index([sessionId])
}
