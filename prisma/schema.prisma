// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  CT
  MEDICO
  JUGADOR
  DIRECTIVO
}

enum SessionType {
  GENERAL
  FUERZA
  TACTICA
  AEROBICO
  RECUPERACION
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String?
  password  String?   // necesario para /admin/users (bcrypt)
  role      Role      @default(JUGADOR)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  sessions  Session[] @relation("UserSessions")

  // Relaciones nuevas (no obligatorias para datos existentes)
  wellness  WellnessEntry[]
  rpes      RPEEntry[]
}

model Session {
  id          String       @id @default(cuid())
  title       String
  description String?
  date        DateTime
  type        SessionType  @default(GENERAL)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  createdBy   String
  user        User         @relation("UserSessions", fields: [createdBy], references: [id], onDelete: Cascade)

  // Relación opcional con RPEEntry (no rompe nada)
  rpes        RPEEntry[]

  @@index([date])
  @@index([type])
  @@index([createdBy])
}

// ===== NUEVOS MODELOS MVP =====

model WellnessEntry {
  id        String   @id @default(cuid())
  userId    String
  date      DateTime // 00:00:00 UTC del día
  sleep     Int      // 1–10
  soreness  Int      // 1–10
  stress    Int      // 1–10
  mood      Int      // 1–10
  notes     String?

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, date])
  @@index([date, userId])
}

model RPEEntry {
  id         String   @id @default(cuid())
  userId     String
  date       DateTime        // 00:00:00 UTC de la sesión o del día
  sessionId  String?         // opcional: puede linkear a Session
  rpe        Int             // 0–10
  duration   Int?            // minutos
  load       Int?            // rpe*duración (precalc opcional)

  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  session    Session? @relation(fields: [sessionId], references: [id], onDelete: SetNull)

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([date, userId])
  @@index([sessionId])
}
