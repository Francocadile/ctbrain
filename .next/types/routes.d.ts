// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin" | "/admin/users" | "/admin/users/pending" | "/api/medico/test-players " | "/ct" | "/ct/alerts" | "/ct/dashboard" | "/ct/exercises" | "/ct/injuries" | "/ct/library" | "/ct/metrics/rpe" | "/ct/metrics/wellness" | "/ct/metrics/wellness/semana" | "/ct/plan-semanal" | "/ct/rivales" | "/ct/rivales/[id]" | "/ct/rivales/[id]/estadisticas" | "/ct/rivales/[id]/plantel" | "/ct/rivales/gestionar" | "/ct/scouting" | "/ct/scouting/[categoria]" | "/ct/scouting/config" | "/ct/scouting/player/[id]" | "/ct/scouting/player/[id]/edit" | "/ct/sessions" | "/ct/sessions/[id]" | "/ct/sessions/buscar" | "/ct/sessions/by-day/[ymd]/[turn]" | "/ct/videos" | "/directivo" | "/jugador" | "/jugador/[id]" | "/jugador/rpe" | "/jugador/wellness" | "/login" | "/medico" | "/medico/injuries" | "/medico/injuries/[id]" | "/medico/injuries/new" | "/medico/protocolos" | "/medico/wellness" | "/pending-approval" | "/signup"
type AppRouteHandlerRoutes = "/api/admin/users/[id]/approve" | "/api/alerts/daily" | "/api/auth/[...nextauth]" | "/api/auth/me" | "/api/ct/exercises" | "/api/ct/exercises/[id]" | "/api/ct/rivales" | "/api/ct/rivales/[id]" | "/api/ct/rivales/[id]/import/csv" | "/api/ct/rivales/[id]/import/pdf" | "/api/ct/rivales/[id]/notas" | "/api/ct/rivales/[id]/plan" | "/api/ct/rivales/[id]/player" | "/api/ct/rivales/[id]/player/video" | "/api/ct/rivales/[id]/squad" | "/api/ct/rivales/[id]/stats" | "/api/ct/rivales/[id]/videos" | "/api/ct/rivales/[id]/visibility" | "/api/ct/rivales/resolve" | "/api/ct/rivales/search" | "/api/ct/scouting/categories" | "/api/ct/scouting/categories/[id]" | "/api/ct/scouting/players" | "/api/ct/scouting/players/[id]" | "/api/ct/settings/kinds" | "/api/ct/settings/places" | "/api/dev/debug-exercises-scan" | "/api/dev/peek-users" | "/api/dev/seed" | "/api/dev/set-role" | "/api/exercises-flat" | "/api/export/rpe" | "/api/export/wellness" | "/api/medico/clinical" | "/api/medico/clinical/[id]" | "/api/medico/clinical/analytics" | "/api/medico/users/players" | "/api/metrics/rpe" | "/api/metrics/rpe/[id]" | "/api/metrics/rpe/clear-duration" | "/api/metrics/rpe/default-duration" | "/api/metrics/rpe/range" | "/api/metrics/wellness" | "/api/metrics/wellness/range" | "/api/planner/labels" | "/api/players" | "/api/search/exercises" | "/api/sessions" | "/api/sessions/[id]" | "/api/sessions/duplicate" | "/api/sessions/export" | "/api/sessions/import" | "/api/sessions/import-csv" | "/api/sessions/week" | "/api/users" | "/api/users/[id]" | "/api/users/players" | "/api/users/players/debug" | "/redirect"
type PageRoutes = never
type LayoutRoutes = "/" | "/admin" | "/ct" | "/jugador" | "/medico"
type RedirectRoutes = "/med/[[...path]]"
type RewriteRoutes = "/api/med/[[...path]]"
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/admin/users": {}
  "/admin/users/pending": {}
  "/api/admin/users/[id]/approve": { "id": string; }
  "/api/alerts/daily": {}
  "/api/auth/[...nextauth]": { "nextauth": string[]; }
  "/api/auth/me": {}
  "/api/ct/exercises": {}
  "/api/ct/exercises/[id]": { "id": string; }
  "/api/ct/rivales": {}
  "/api/ct/rivales/[id]": { "id": string; }
  "/api/ct/rivales/[id]/import/csv": { "id": string; }
  "/api/ct/rivales/[id]/import/pdf": { "id": string; }
  "/api/ct/rivales/[id]/notas": { "id": string; }
  "/api/ct/rivales/[id]/plan": { "id": string; }
  "/api/ct/rivales/[id]/player": { "id": string; }
  "/api/ct/rivales/[id]/player/video": { "id": string; }
  "/api/ct/rivales/[id]/squad": { "id": string; }
  "/api/ct/rivales/[id]/stats": { "id": string; }
  "/api/ct/rivales/[id]/videos": { "id": string; }
  "/api/ct/rivales/[id]/visibility": { "id": string; }
  "/api/ct/rivales/resolve": {}
  "/api/ct/rivales/search": {}
  "/api/ct/scouting/categories": {}
  "/api/ct/scouting/categories/[id]": { "id": string; }
  "/api/ct/scouting/players": {}
  "/api/ct/scouting/players/[id]": { "id": string; }
  "/api/ct/settings/kinds": {}
  "/api/ct/settings/places": {}
  "/api/dev/debug-exercises-scan": {}
  "/api/dev/peek-users": {}
  "/api/dev/seed": {}
  "/api/dev/set-role": {}
  "/api/exercises-flat": {}
  "/api/export/rpe": {}
  "/api/export/wellness": {}
  "/api/med/[[...path]]": { "path"?: string[]; }
  "/api/medico/clinical": {}
  "/api/medico/clinical/[id]": { "id": string; }
  "/api/medico/clinical/analytics": {}
  "/api/medico/test-players ": {}
  "/api/medico/users/players": {}
  "/api/metrics/rpe": {}
  "/api/metrics/rpe/[id]": { "id": string; }
  "/api/metrics/rpe/clear-duration": {}
  "/api/metrics/rpe/default-duration": {}
  "/api/metrics/rpe/range": {}
  "/api/metrics/wellness": {}
  "/api/metrics/wellness/range": {}
  "/api/planner/labels": {}
  "/api/players": {}
  "/api/search/exercises": {}
  "/api/sessions": {}
  "/api/sessions/[id]": { "id": string; }
  "/api/sessions/duplicate": {}
  "/api/sessions/export": {}
  "/api/sessions/import": {}
  "/api/sessions/import-csv": {}
  "/api/sessions/week": {}
  "/api/users": {}
  "/api/users/[id]": { "id": string; }
  "/api/users/players": {}
  "/api/users/players/debug": {}
  "/ct": {}
  "/ct/alerts": {}
  "/ct/dashboard": {}
  "/ct/exercises": {}
  "/ct/injuries": {}
  "/ct/library": {}
  "/ct/metrics/rpe": {}
  "/ct/metrics/wellness": {}
  "/ct/metrics/wellness/semana": {}
  "/ct/plan-semanal": {}
  "/ct/rivales": {}
  "/ct/rivales/[id]": { "id": string; }
  "/ct/rivales/[id]/estadisticas": { "id": string; }
  "/ct/rivales/[id]/plantel": { "id": string; }
  "/ct/rivales/gestionar": {}
  "/ct/scouting": {}
  "/ct/scouting/[categoria]": { "categoria": string; }
  "/ct/scouting/config": {}
  "/ct/scouting/player/[id]": { "id": string; }
  "/ct/scouting/player/[id]/edit": { "id": string; }
  "/ct/sessions": {}
  "/ct/sessions/[id]": { "id": string; }
  "/ct/sessions/buscar": {}
  "/ct/sessions/by-day/[ymd]/[turn]": { "ymd": string; "turn": string; }
  "/ct/videos": {}
  "/directivo": {}
  "/jugador": {}
  "/jugador/[id]": { "id": string; }
  "/jugador/rpe": {}
  "/jugador/wellness": {}
  "/login": {}
  "/med/[[...path]]": { "path"?: string[]; }
  "/medico": {}
  "/medico/injuries": {}
  "/medico/injuries/[id]": { "id": string; }
  "/medico/injuries/new": {}
  "/medico/protocolos": {}
  "/medico/wellness": {}
  "/pending-approval": {}
  "/redirect": {}
  "/signup": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/admin": never
  "/ct": never
  "/jugador": never
  "/medico": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
